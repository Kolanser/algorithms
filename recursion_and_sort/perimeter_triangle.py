"""
https://contest.yandex.ru/contest/24734/problems/F/
Периметр треугольника

Перед сном Рита решила поиграть в игру на телефоне. Дан массив целых чисел, в котором каждый элемент обозначает длину стороны треугольника.
Нужно определить максимально возможный периметр треугольника, составленного из сторон с длинами из заданного массива. Помогите Рите скорее закончить игру и пойти спать.

Напомним, что из трёх отрезков с длинами a ≤ b ≤ c можно составить треугольник, если выполнено неравенство треугольника: c < a + b

Разберём пример:
даны длины сторон 6, 3, 3, 2. Попробуем в качестве наибольшей стороны выбрать 6. Неравенство треугольника не может выполниться, так как остались 3, 3, 2 —– максимальная сумма из них равна 6.

Без шестёрки оставшиеся три отрезка уже образуют треугольник со сторонами 3, 3, 2. Неравенство выполняется: 3 < 3 + 2. Периметр равен 3 + 3 + 2 = 8.

Формат ввода
В первой строке записано количество отрезков n, 3≤ n≤ 10000.

Во второй строке записано n неотрицательных чисел, не превосходящих 10 000, –— длины отрезков.

Формат вывода
Нужно вывести одно число —– наибольший периметр треугольника.

Гарантируется, что тройка чисел, которая может образовать треугольник, всегда есть.

Пример 1
Ввод	Вывод
4
6 3 3 2
8
Пример 2
Ввод	Вывод
6
5 3 7 2 8 3
20

"""


def get_max_perimeter(triangle_sides):
    triangle_sides.sort()
    for i in range(len(triangle_sides) - 1, -1, -1):
        side_1 = triangle_sides[i]
        j = i - 1
        while j != 0:
            side_2 = triangle_sides[j]
            j -= 1
            side_3 = triangle_sides[j]
            if side_2 + side_3 > side_1:
                return side_1 + side_2 + side_3


def main():
    _ = int(input())
    triangle_sides = list(map(int, input().split()))
    max_perimeter = get_max_perimeter(triangle_sides)
    print(max_perimeter)


if __name__ == '__main__':
    main()
